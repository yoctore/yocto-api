[  {    "type": "delete",    "url": "/availability/:availability_id",    "title": "DELETE one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "DeleteAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "delete",    "url": "/availability/:availability_id",    "title": "DELETE one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "DeleteAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "delete",    "url": "/availability/:availability_id",    "title": "DELETE one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "DeleteAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "delete",    "url": "/availability/:availability_id",    "title": "DELETE one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "DeleteAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "delete",    "url": "/availability/:availability_id",    "title": "DELETE one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "DeleteAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "delete",    "url": "/availability/:availability_id",    "title": "DELETE one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "DeleteAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "delete",    "url": "/availability/:availability_id",    "title": "DELETE one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "DeleteAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "delete",    "url": "/availability/:availability_id",    "title": "DELETE one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "DeleteAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "delete",    "url": "/availability/:availability_id",    "title": "DELETE one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "DeleteAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "delete",    "url": "/availability/:availability_id",    "title": "DELETE one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "DeleteAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "get",    "url": "/availability/:availability_id",    "title": "GET availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all availability, if you want get one availability you should specify his id, otherwise the whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"[object Object]\"\n  \"store_id\" : [\"ObjecId\"]\n  \"product_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "GetAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "get",    "url": "/availability/:availability_id",    "title": "GET availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all availability, if you want get one availability you should specify his id, otherwise the whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"[object Object]\"\n  \"store_id\" : [\"ObjecId\"]\n  \"product_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "GetAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "get",    "url": "/availability/:availability_id",    "title": "GET availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all availability, if you want get one availability you should specify his id, otherwise the whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"[object Object]\"\n  \"store_id\" : [\"ObjecId\"]\n  \"product_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "GetAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "get",    "url": "/availability/:availability_id",    "title": "GET availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all availability, if you want get one availability you should specify his id, otherwise the whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"[object Object]\"\n  \"store_id\" : [\"ObjecId\"]\n  \"product_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "GetAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "get",    "url": "/availability/:availability_id",    "title": "GET availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all availability, if you want get one availability you should specify his id, otherwise the whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"[object Object]\"\n  \"store_id\" : [\"ObjecId\"]\n  \"product_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "GetAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "get",    "url": "/availability/:availability_id",    "title": "GET availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all availability, if you want get one availability you should specify his id, otherwise the whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"[object Object]\"\n  \"store_id\" : [\"ObjecId\"]\n  \"product_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "GetAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "get",    "url": "/availability/:availability_id",    "title": "GET availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all availability, if you want get one availability you should specify his id, otherwise the whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"[object Object]\"\n  \"store_id\" : [\"ObjecId\"]\n  \"product_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "GetAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "get",    "url": "/availability/:availability_id",    "title": "GET availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all availability, if you want get one availability you should specify his id, otherwise the whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"[object Object]\"\n  \"store_id\" : [\"ObjecId\"]\n  \"product_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "GetAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "get",    "url": "/availability/:availability_id",    "title": "GET availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all availability, if you want get one availability you should specify his id, otherwise the whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"[object Object]\"\n  \"store_id\" : [\"ObjecId\"]\n  \"product_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "GetAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "get",    "url": "/availability/:availability_id",    "title": "GET availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all availability, if you want get one availability you should specify his id, otherwise the whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"[object Object]\"\n  \"store_id\" : [\"ObjecId\"]\n  \"product_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "GetAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "head",    "url": "/availability/:availability_id",    "title": "HEAD of availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all availability, if you want get  the header of one availability you should specify his id, otherwise the header of whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "HeadAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "head",    "url": "/availability/:availability_id",    "title": "HEAD of availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all availability, if you want get  the header of one availability you should specify his id, otherwise the header of whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "HeadAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "head",    "url": "/availability/:availability_id",    "title": "HEAD of availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all availability, if you want get  the header of one availability you should specify his id, otherwise the header of whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "HeadAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "head",    "url": "/availability/:availability_id",    "title": "HEAD of availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all availability, if you want get  the header of one availability you should specify his id, otherwise the header of whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "HeadAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "head",    "url": "/availability/:availability_id",    "title": "HEAD of availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all availability, if you want get  the header of one availability you should specify his id, otherwise the header of whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "HeadAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "head",    "url": "/availability/:availability_id",    "title": "HEAD of availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all availability, if you want get  the header of one availability you should specify his id, otherwise the header of whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "HeadAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "head",    "url": "/availability/:availability_id",    "title": "HEAD of availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all availability, if you want get  the header of one availability you should specify his id, otherwise the header of whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "HeadAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "head",    "url": "/availability/:availability_id",    "title": "HEAD of availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all availability, if you want get  the header of one availability you should specify his id, otherwise the header of whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "HeadAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "head",    "url": "/availability/:availability_id",    "title": "HEAD of availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all availability, if you want get  the header of one availability you should specify his id, otherwise the header of whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "HeadAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "head",    "url": "/availability/:availability_id",    "title": "HEAD of availability(s)",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all availability, if you want get  the header of one availability you should specify his id, otherwise the header of whole availabilitys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "HeadAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "patch",    "url": "/availability/:availability_id",    "title": "PATCH one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PatchAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "patch",    "url": "/availability/:availability_id",    "title": "PATCH one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PatchAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "patch",    "url": "/availability/:availability_id",    "title": "PATCH one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PatchAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "patch",    "url": "/availability/:availability_id",    "title": "PATCH one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PatchAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "patch",    "url": "/availability/:availability_id",    "title": "PATCH one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PatchAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "patch",    "url": "/availability/:availability_id",    "title": "PATCH one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PatchAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "patch",    "url": "/availability/:availability_id",    "title": "PATCH one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PatchAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "patch",    "url": "/availability/:availability_id",    "title": "PATCH one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PatchAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "patch",    "url": "/availability/:availability_id",    "title": "PATCH one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PatchAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "patch",    "url": "/availability/:availability_id",    "title": "PATCH one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PatchAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "post",    "url": "/availability/",    "title": "POST one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PostAvailability",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/"      }    ]  },  {    "type": "post",    "url": "/availability/",    "title": "POST one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PostAvailability",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/"      }    ]  },  {    "type": "post",    "url": "/availability/",    "title": "POST one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PostAvailability",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/"      }    ]  },  {    "type": "post",    "url": "/availability/",    "title": "POST one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PostAvailability",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/"      }    ]  },  {    "type": "post",    "url": "/availability/",    "title": "POST one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PostAvailability",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/"      }    ]  },  {    "type": "post",    "url": "/availability/",    "title": "POST one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PostAvailability",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/"      }    ]  },  {    "type": "post",    "url": "/availability/",    "title": "POST one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PostAvailability",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/"      }    ]  },  {    "type": "post",    "url": "/availability/",    "title": "POST one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PostAvailability",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/"      }    ]  },  {    "type": "post",    "url": "/availability/",    "title": "POST one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PostAvailability",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/"      }    ]  },  {    "type": "post",    "url": "/availability/",    "title": "POST one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PostAvailability",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/"      }    ]  },  {    "type": "put",    "url": "/availability/:availability_id",    "title": "PUT one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PutAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "put",    "url": "/availability/:availability_id",    "title": "PUT one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PutAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "put",    "url": "/availability/:availability_id",    "title": "PUT one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PutAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "put",    "url": "/availability/:availability_id",    "title": "PUT one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PutAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "put",    "url": "/availability/:availability_id",    "title": "PUT one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PutAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "put",    "url": "/availability/:availability_id",    "title": "PUT one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PutAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "put",    "url": "/availability/:availability_id",    "title": "PUT one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PutAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "put",    "url": "/availability/:availability_id",    "title": "PUT one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PutAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "put",    "url": "/availability/:availability_id",    "title": "PUT one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PutAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "put",    "url": "/availability/:availability_id",    "title": "PUT one availability",    "group": "availability",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a availability in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "availability_id",            "description": "<p>availability_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjecId]</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the availability</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id of the availability</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "availabilitySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "availabilityNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a availability\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a availability</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "availability",    "name": "PutAvailabilityAvailability_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/availability/:availability_id"      }    ]  },  {    "type": "delete",    "url": "/bill/:bill_id",    "title": "DELETE one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "DeleteBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "delete",    "url": "/bill/:bill_id",    "title": "DELETE one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "DeleteBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "delete",    "url": "/bill/:bill_id",    "title": "DELETE one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "DeleteBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "delete",    "url": "/bill/:bill_id",    "title": "DELETE one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "DeleteBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "delete",    "url": "/bill/:bill_id",    "title": "DELETE one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "DeleteBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "delete",    "url": "/bill/:bill_id",    "title": "DELETE one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "DeleteBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "delete",    "url": "/bill/:bill_id",    "title": "DELETE one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "DeleteBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "delete",    "url": "/bill/:bill_id",    "title": "DELETE one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "DeleteBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "delete",    "url": "/bill/:bill_id",    "title": "DELETE one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "DeleteBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "get",    "url": "/bill/:bill_id",    "title": "GET bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all bill, if you want get one bill you should specify his id, otherwise the whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "GetBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "get",    "url": "/bill/:bill_id",    "title": "GET bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all bill, if you want get one bill you should specify his id, otherwise the whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "GetBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "get",    "url": "/bill/:bill_id",    "title": "GET bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all bill, if you want get one bill you should specify his id, otherwise the whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "GetBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "get",    "url": "/bill/:bill_id",    "title": "GET bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all bill, if you want get one bill you should specify his id, otherwise the whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "GetBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "get",    "url": "/bill/:bill_id",    "title": "GET bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all bill, if you want get one bill you should specify his id, otherwise the whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "GetBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "get",    "url": "/bill/:bill_id",    "title": "GET bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all bill, if you want get one bill you should specify his id, otherwise the whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "GetBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "get",    "url": "/bill/:bill_id",    "title": "GET bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all bill, if you want get one bill you should specify his id, otherwise the whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "GetBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "get",    "url": "/bill/:bill_id",    "title": "GET bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all bill, if you want get one bill you should specify his id, otherwise the whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "GetBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "get",    "url": "/bill/:bill_id",    "title": "GET bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all bill, if you want get one bill you should specify his id, otherwise the whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "GetBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "head",    "url": "/bill/:bill_id",    "title": "HEAD of bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all bill, if you want get  the header of one bill you should specify his id, otherwise the header of whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "HeadBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "head",    "url": "/bill/:bill_id",    "title": "HEAD of bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all bill, if you want get  the header of one bill you should specify his id, otherwise the header of whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "HeadBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "head",    "url": "/bill/:bill_id",    "title": "HEAD of bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all bill, if you want get  the header of one bill you should specify his id, otherwise the header of whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "HeadBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "head",    "url": "/bill/:bill_id",    "title": "HEAD of bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all bill, if you want get  the header of one bill you should specify his id, otherwise the header of whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "HeadBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "head",    "url": "/bill/:bill_id",    "title": "HEAD of bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all bill, if you want get  the header of one bill you should specify his id, otherwise the header of whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "HeadBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "head",    "url": "/bill/:bill_id",    "title": "HEAD of bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all bill, if you want get  the header of one bill you should specify his id, otherwise the header of whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "HeadBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "head",    "url": "/bill/:bill_id",    "title": "HEAD of bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all bill, if you want get  the header of one bill you should specify his id, otherwise the header of whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "HeadBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "head",    "url": "/bill/:bill_id",    "title": "HEAD of bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all bill, if you want get  the header of one bill you should specify his id, otherwise the header of whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "HeadBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "head",    "url": "/bill/:bill_id",    "title": "HEAD of bill(s)",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all bill, if you want get  the header of one bill you should specify his id, otherwise the header of whole bills are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "HeadBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "patch",    "url": "/bill/:bill_id",    "title": "PATCH one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PatchBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "patch",    "url": "/bill/:bill_id",    "title": "PATCH one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PatchBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "patch",    "url": "/bill/:bill_id",    "title": "PATCH one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PatchBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "patch",    "url": "/bill/:bill_id",    "title": "PATCH one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PatchBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "patch",    "url": "/bill/:bill_id",    "title": "PATCH one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PatchBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "patch",    "url": "/bill/:bill_id",    "title": "PATCH one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PatchBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "patch",    "url": "/bill/:bill_id",    "title": "PATCH one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PatchBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "patch",    "url": "/bill/:bill_id",    "title": "PATCH one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PatchBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "patch",    "url": "/bill/:bill_id",    "title": "PATCH one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PatchBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "post",    "url": "/bill/",    "title": "POST one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PostBill",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/"      }    ]  },  {    "type": "post",    "url": "/bill/",    "title": "POST one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PostBill",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/"      }    ]  },  {    "type": "post",    "url": "/bill/",    "title": "POST one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PostBill",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/"      }    ]  },  {    "type": "post",    "url": "/bill/",    "title": "POST one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PostBill",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/"      }    ]  },  {    "type": "post",    "url": "/bill/",    "title": "POST one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PostBill",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/"      }    ]  },  {    "type": "post",    "url": "/bill/",    "title": "POST one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PostBill",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/"      }    ]  },  {    "type": "post",    "url": "/bill/",    "title": "POST one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PostBill",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/"      }    ]  },  {    "type": "post",    "url": "/bill/",    "title": "POST one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PostBill",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/"      }    ]  },  {    "type": "post",    "url": "/bill/",    "title": "POST one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PostBill",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/"      }    ]  },  {    "type": "put",    "url": "/bill/:bill_id",    "title": "PUT one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PutBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "put",    "url": "/bill/:bill_id",    "title": "PUT one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PutBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "put",    "url": "/bill/:bill_id",    "title": "PUT one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PutBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "put",    "url": "/bill/:bill_id",    "title": "PUT one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PutBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "put",    "url": "/bill/:bill_id",    "title": "PUT one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PutBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "put",    "url": "/bill/:bill_id",    "title": "PUT one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PutBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "put",    "url": "/bill/:bill_id",    "title": "PUT one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PutBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "put",    "url": "/bill/:bill_id",    "title": "PUT one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PutBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "put",    "url": "/bill/:bill_id",    "title": "PUT one bill",    "group": "bill",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a bill in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the bill</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the bill</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "billSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "billNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a bill\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a bill</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "bill",    "name": "PutBillBill_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/bill/:bill_id"      }    ]  },  {    "type": "delete",    "url": "/cart/:cart_id",    "title": "DELETE one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "DeleteCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "delete",    "url": "/cart/:cart_id",    "title": "DELETE one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "DeleteCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "delete",    "url": "/cart/:cart_id",    "title": "DELETE one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "DeleteCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "delete",    "url": "/cart/:cart_id",    "title": "DELETE one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "DeleteCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "delete",    "url": "/cart/:cart_id",    "title": "DELETE one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "DeleteCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "delete",    "url": "/cart/:cart_id",    "title": "DELETE one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "DeleteCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "delete",    "url": "/cart/:cart_id",    "title": "DELETE one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "DeleteCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "delete",    "url": "/cart/:cart_id",    "title": "DELETE one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "DeleteCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "get",    "url": "/cart/:cart_id",    "title": "GET cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all cart, if you want get one cart you should specify his id, otherwise the whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "GetCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "get",    "url": "/cart/:cart_id",    "title": "GET cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all cart, if you want get one cart you should specify his id, otherwise the whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "GetCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "get",    "url": "/cart/:cart_id",    "title": "GET cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all cart, if you want get one cart you should specify his id, otherwise the whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "GetCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "get",    "url": "/cart/:cart_id",    "title": "GET cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all cart, if you want get one cart you should specify his id, otherwise the whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "GetCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "get",    "url": "/cart/:cart_id",    "title": "GET cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all cart, if you want get one cart you should specify his id, otherwise the whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "GetCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "get",    "url": "/cart/:cart_id",    "title": "GET cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all cart, if you want get one cart you should specify his id, otherwise the whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "GetCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "get",    "url": "/cart/:cart_id",    "title": "GET cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all cart, if you want get one cart you should specify his id, otherwise the whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "GetCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "get",    "url": "/cart/:cart_id",    "title": "GET cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all cart, if you want get one cart you should specify his id, otherwise the whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\n  \"product_id\" : [\"ObjectId\"]\n  \"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "GetCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "head",    "url": "/cart/:cart_id",    "title": "HEAD of cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all cart, if you want get  the header of one cart you should specify his id, otherwise the header of whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "HeadCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "head",    "url": "/cart/:cart_id",    "title": "HEAD of cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all cart, if you want get  the header of one cart you should specify his id, otherwise the header of whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "HeadCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "head",    "url": "/cart/:cart_id",    "title": "HEAD of cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all cart, if you want get  the header of one cart you should specify his id, otherwise the header of whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "HeadCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "head",    "url": "/cart/:cart_id",    "title": "HEAD of cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all cart, if you want get  the header of one cart you should specify his id, otherwise the header of whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "HeadCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "head",    "url": "/cart/:cart_id",    "title": "HEAD of cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all cart, if you want get  the header of one cart you should specify his id, otherwise the header of whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "HeadCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "head",    "url": "/cart/:cart_id",    "title": "HEAD of cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all cart, if you want get  the header of one cart you should specify his id, otherwise the header of whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "HeadCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "head",    "url": "/cart/:cart_id",    "title": "HEAD of cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all cart, if you want get  the header of one cart you should specify his id, otherwise the header of whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "HeadCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "head",    "url": "/cart/:cart_id",    "title": "HEAD of cart(s)",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all cart, if you want get  the header of one cart you should specify his id, otherwise the header of whole carts are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "HeadCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "patch",    "url": "/cart/:cart_id",    "title": "PATCH one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PatchCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "patch",    "url": "/cart/:cart_id",    "title": "PATCH one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PatchCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "patch",    "url": "/cart/:cart_id",    "title": "PATCH one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PatchCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "patch",    "url": "/cart/:cart_id",    "title": "PATCH one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PatchCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "patch",    "url": "/cart/:cart_id",    "title": "PATCH one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PatchCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "patch",    "url": "/cart/:cart_id",    "title": "PATCH one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PatchCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "patch",    "url": "/cart/:cart_id",    "title": "PATCH one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PatchCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "patch",    "url": "/cart/:cart_id",    "title": "PATCH one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PatchCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "post",    "url": "/cart/",    "title": "POST one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PostCart",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/"      }    ]  },  {    "type": "post",    "url": "/cart/",    "title": "POST one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PostCart",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/"      }    ]  },  {    "type": "post",    "url": "/cart/",    "title": "POST one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PostCart",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/"      }    ]  },  {    "type": "post",    "url": "/cart/",    "title": "POST one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PostCart",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/"      }    ]  },  {    "type": "post",    "url": "/cart/",    "title": "POST one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PostCart",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/"      }    ]  },  {    "type": "post",    "url": "/cart/",    "title": "POST one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PostCart",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/"      }    ]  },  {    "type": "post",    "url": "/cart/",    "title": "POST one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PostCart",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/"      }    ]  },  {    "type": "post",    "url": "/cart/",    "title": "POST one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PostCart",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/"      }    ]  },  {    "type": "put",    "url": "/cart/:cart_id",    "title": "PUT one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PutCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "put",    "url": "/cart/:cart_id",    "title": "PUT one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PutCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "put",    "url": "/cart/:cart_id",    "title": "PUT one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PutCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "put",    "url": "/cart/:cart_id",    "title": "PUT one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PutCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "put",    "url": "/cart/:cart_id",    "title": "PUT one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PutCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "put",    "url": "/cart/:cart_id",    "title": "PUT one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PutCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "put",    "url": "/cart/:cart_id",    "title": "PUT one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PutCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "put",    "url": "/cart/:cart_id",    "title": "PUT one cart",    "group": "cart",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a cart in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "cart_id",            "description": "<p>cart_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the cart</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the cart</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "cartSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "cartNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a cart\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a cart</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "cart",    "name": "PutCartCart_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/cart/:cart_id"      }    ]  },  {    "type": "delete",    "url": "/category/:category_id",    "title": "DELETE one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "DeleteCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "delete",    "url": "/category/:category_id",    "title": "DELETE one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "DeleteCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "delete",    "url": "/category/:category_id",    "title": "DELETE one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "DeleteCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "delete",    "url": "/category/:category_id",    "title": "DELETE one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "DeleteCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "delete",    "url": "/category/:category_id",    "title": "DELETE one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "DeleteCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "delete",    "url": "/category/:category_id",    "title": "DELETE one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "DeleteCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "delete",    "url": "/category/:category_id",    "title": "DELETE one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "DeleteCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "get",    "url": "/category/:category_id",    "title": "GET category(s)",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all category, if you want get one category you should specify his id, otherwise the whole categorys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the category</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"String\"\n  \"category_id\" : [\"ObjectId\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "GetCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "get",    "url": "/category/:category_id",    "title": "GET category(s)",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all category, if you want get one category you should specify his id, otherwise the whole categorys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the category</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"String\"\n  \"category_id\" : [\"ObjectId\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "GetCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "get",    "url": "/category/:category_id",    "title": "GET category(s)",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all category, if you want get one category you should specify his id, otherwise the whole categorys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the category</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"String\"\n  \"category_id\" : [\"ObjectId\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "GetCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "get",    "url": "/category/:category_id",    "title": "GET category(s)",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all category, if you want get one category you should specify his id, otherwise the whole categorys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the category</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"String\"\n  \"category_id\" : [\"ObjectId\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "GetCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "get",    "url": "/category/:category_id",    "title": "GET category(s)",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all category, if you want get one category you should specify his id, otherwise the whole categorys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the category</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"String\"\n  \"category_id\" : [\"ObjectId\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "GetCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "get",    "url": "/category/:category_id",    "title": "GET category(s)",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all category, if you want get one category you should specify his id, otherwise the whole categorys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the category</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"String\"\n  \"category_id\" : [\"ObjectId\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "GetCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "get",    "url": "/category/:category_id",    "title": "GET category(s)",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all category, if you want get one category you should specify his id, otherwise the whole categorys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the category</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"String\"\n  \"category_id\" : [\"ObjectId\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "GetCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "head",    "url": "/category/:category_id",    "title": "HEAD of category(s)",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all category, if you want get  the header of one category you should specify his id, otherwise the header of whole categorys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "HeadCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "head",    "url": "/category/:category_id",    "title": "HEAD of category(s)",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all category, if you want get  the header of one category you should specify his id, otherwise the header of whole categorys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "HeadCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "head",    "url": "/category/:category_id",    "title": "HEAD of category(s)",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all category, if you want get  the header of one category you should specify his id, otherwise the header of whole categorys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "HeadCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "head",    "url": "/category/:category_id",    "title": "HEAD of category(s)",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all category, if you want get  the header of one category you should specify his id, otherwise the header of whole categorys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "HeadCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "head",    "url": "/category/:category_id",    "title": "HEAD of category(s)",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all category, if you want get  the header of one category you should specify his id, otherwise the header of whole categorys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "HeadCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "head",    "url": "/category/:category_id",    "title": "HEAD of category(s)",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all category, if you want get  the header of one category you should specify his id, otherwise the header of whole categorys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "HeadCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "head",    "url": "/category/:category_id",    "title": "HEAD of category(s)",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all category, if you want get  the header of one category you should specify his id, otherwise the header of whole categorys are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "HeadCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "patch",    "url": "/category/:category_id",    "title": "PATCH one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PatchCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "patch",    "url": "/category/:category_id",    "title": "PATCH one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PatchCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "patch",    "url": "/category/:category_id",    "title": "PATCH one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PatchCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "patch",    "url": "/category/:category_id",    "title": "PATCH one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PatchCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "patch",    "url": "/category/:category_id",    "title": "PATCH one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PatchCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "patch",    "url": "/category/:category_id",    "title": "PATCH one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PatchCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "patch",    "url": "/category/:category_id",    "title": "PATCH one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PatchCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "post",    "url": "/category/",    "title": "POST one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PostCategory",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/"      }    ]  },  {    "type": "post",    "url": "/category/",    "title": "POST one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PostCategory",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/"      }    ]  },  {    "type": "post",    "url": "/category/",    "title": "POST one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PostCategory",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/"      }    ]  },  {    "type": "post",    "url": "/category/",    "title": "POST one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PostCategory",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/"      }    ]  },  {    "type": "post",    "url": "/category/",    "title": "POST one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PostCategory",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/"      }    ]  },  {    "type": "post",    "url": "/category/",    "title": "POST one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PostCategory",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/"      }    ]  },  {    "type": "post",    "url": "/category/",    "title": "POST one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PostCategory",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/"      }    ]  },  {    "type": "put",    "url": "/category/:category_id",    "title": "PUT one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PutCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "put",    "url": "/category/:category_id",    "title": "PUT one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PutCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "put",    "url": "/category/:category_id",    "title": "PUT one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PutCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "put",    "url": "/category/:category_id",    "title": "PUT one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PutCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "put",    "url": "/category/:category_id",    "title": "PUT one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PutCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "put",    "url": "/category/:category_id",    "title": "PUT one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PutCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "put",    "url": "/category/:category_id",    "title": "PUT one category",    "group": "category",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a category in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "category_id",            "description": "<p>category_id(s) of the category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the category</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "categorySuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "categoryNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a category\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a category</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "category",    "name": "PutCategoryCategory_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/category/:category_id"      }    ]  },  {    "type": "delete",    "url": "/order/:order_id",    "title": "DELETE one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "DeleteOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "delete",    "url": "/order/:order_id",    "title": "DELETE one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "DeleteOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "delete",    "url": "/order/:order_id",    "title": "DELETE one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "DeleteOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "delete",    "url": "/order/:order_id",    "title": "DELETE one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "DeleteOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "delete",    "url": "/order/:order_id",    "title": "DELETE one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "DeleteOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "delete",    "url": "/order/:order_id",    "title": "DELETE one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "DeleteOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "get",    "url": "/order/:order_id",    "title": "GET order(s)",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all order, if you want get one order you should specify his id, otherwise the whole orders are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"transaction_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "GetOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "get",    "url": "/order/:order_id",    "title": "GET order(s)",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all order, if you want get one order you should specify his id, otherwise the whole orders are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"transaction_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "GetOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "get",    "url": "/order/:order_id",    "title": "GET order(s)",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all order, if you want get one order you should specify his id, otherwise the whole orders are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"transaction_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "GetOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "get",    "url": "/order/:order_id",    "title": "GET order(s)",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all order, if you want get one order you should specify his id, otherwise the whole orders are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"transaction_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "GetOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "get",    "url": "/order/:order_id",    "title": "GET order(s)",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all order, if you want get one order you should specify his id, otherwise the whole orders are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"transaction_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "GetOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "get",    "url": "/order/:order_id",    "title": "GET order(s)",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all order, if you want get one order you should specify his id, otherwise the whole orders are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"String\"\n  \"product_id\" : [\"ObjectId\"]\n  \"transaction_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "GetOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "head",    "url": "/order/:order_id",    "title": "HEAD of order(s)",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all order, if you want get  the header of one order you should specify his id, otherwise the header of whole orders are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "HeadOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "head",    "url": "/order/:order_id",    "title": "HEAD of order(s)",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all order, if you want get  the header of one order you should specify his id, otherwise the header of whole orders are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "HeadOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "head",    "url": "/order/:order_id",    "title": "HEAD of order(s)",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all order, if you want get  the header of one order you should specify his id, otherwise the header of whole orders are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "HeadOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "head",    "url": "/order/:order_id",    "title": "HEAD of order(s)",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all order, if you want get  the header of one order you should specify his id, otherwise the header of whole orders are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "HeadOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "head",    "url": "/order/:order_id",    "title": "HEAD of order(s)",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all order, if you want get  the header of one order you should specify his id, otherwise the header of whole orders are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "HeadOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "head",    "url": "/order/:order_id",    "title": "HEAD of order(s)",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all order, if you want get  the header of one order you should specify his id, otherwise the header of whole orders are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "HeadOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "patch",    "url": "/order/:order_id",    "title": "PATCH one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PatchOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "patch",    "url": "/order/:order_id",    "title": "PATCH one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PatchOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "patch",    "url": "/order/:order_id",    "title": "PATCH one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PatchOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "patch",    "url": "/order/:order_id",    "title": "PATCH one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PatchOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "patch",    "url": "/order/:order_id",    "title": "PATCH one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PatchOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "patch",    "url": "/order/:order_id",    "title": "PATCH one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PatchOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "post",    "url": "/order/",    "title": "POST one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PostOrder",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/"      }    ]  },  {    "type": "post",    "url": "/order/",    "title": "POST one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PostOrder",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/"      }    ]  },  {    "type": "post",    "url": "/order/",    "title": "POST one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PostOrder",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/"      }    ]  },  {    "type": "post",    "url": "/order/",    "title": "POST one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PostOrder",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/"      }    ]  },  {    "type": "post",    "url": "/order/",    "title": "POST one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PostOrder",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/"      }    ]  },  {    "type": "post",    "url": "/order/",    "title": "POST one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PostOrder",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/"      }    ]  },  {    "type": "put",    "url": "/order/:order_id",    "title": "PUT one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PutOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "put",    "url": "/order/:order_id",    "title": "PUT one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PutOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "put",    "url": "/order/:order_id",    "title": "PUT one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PutOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "put",    "url": "/order/:order_id",    "title": "PUT one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PutOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "put",    "url": "/order/:order_id",    "title": "PUT one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PutOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "put",    "url": "/order/:order_id",    "title": "PUT one order",    "group": "order",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a order in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the order</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the order</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id of the order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "orderSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "orderNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a order\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a order</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "order",    "name": "PutOrderOrder_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/order/:order_id"      }    ]  },  {    "type": "delete",    "url": "/product/:product_id",    "title": "DELETE one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "DeleteProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "delete",    "url": "/product/:product_id",    "title": "DELETE one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "DeleteProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "delete",    "url": "/product/:product_id",    "title": "DELETE one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "DeleteProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "delete",    "url": "/product/:product_id",    "title": "DELETE one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "DeleteProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "delete",    "url": "/product/:product_id",    "title": "DELETE one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "DeleteProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "get",    "url": "/product/:product_id",    "title": "GET product(s)",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all product, if you want get one product you should specify his id, otherwise the whole products are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\"reference\" : \"[object Object]\"\n  \"availability_id\" : [\"ObjectId\"]\n  \n  \"category_id\" : [\"\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "GetProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "get",    "url": "/product/:product_id",    "title": "GET product(s)",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all product, if you want get one product you should specify his id, otherwise the whole products are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\"reference\" : \"[object Object]\"\n  \"availability_id\" : [\"ObjectId\"]\n  \n  \"category_id\" : [\"\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "GetProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "get",    "url": "/product/:product_id",    "title": "GET product(s)",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all product, if you want get one product you should specify his id, otherwise the whole products are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\"reference\" : \"[object Object]\"\n  \"availability_id\" : [\"ObjectId\"]\n  \n  \"category_id\" : [\"\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "GetProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "get",    "url": "/product/:product_id",    "title": "GET product(s)",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all product, if you want get one product you should specify his id, otherwise the whole products are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\"reference\" : \"[object Object]\"\n  \"availability_id\" : [\"ObjectId\"]\n  \n  \"category_id\" : [\"\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "GetProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "get",    "url": "/product/:product_id",    "title": "GET product(s)",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all product, if you want get one product you should specify his id, otherwise the whole products are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\"reference\" : \"[object Object]\"\n  \"availability_id\" : [\"ObjectId\"]\n  \n  \"category_id\" : [\"\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "GetProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "head",    "url": "/product/:product_id",    "title": "HEAD of product(s)",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all product, if you want get  the header of one product you should specify his id, otherwise the header of whole products are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "HeadProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "head",    "url": "/product/:product_id",    "title": "HEAD of product(s)",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all product, if you want get  the header of one product you should specify his id, otherwise the header of whole products are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "HeadProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "head",    "url": "/product/:product_id",    "title": "HEAD of product(s)",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all product, if you want get  the header of one product you should specify his id, otherwise the header of whole products are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "HeadProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "head",    "url": "/product/:product_id",    "title": "HEAD of product(s)",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all product, if you want get  the header of one product you should specify his id, otherwise the header of whole products are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "HeadProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "head",    "url": "/product/:product_id",    "title": "HEAD of product(s)",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all product, if you want get  the header of one product you should specify his id, otherwise the header of whole products are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "HeadProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "patch",    "url": "/product/:product_id",    "title": "PATCH one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PatchProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "patch",    "url": "/product/:product_id",    "title": "PATCH one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PatchProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "patch",    "url": "/product/:product_id",    "title": "PATCH one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PatchProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "patch",    "url": "/product/:product_id",    "title": "PATCH one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PatchProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "patch",    "url": "/product/:product_id",    "title": "PATCH one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PatchProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "post",    "url": "/product/",    "title": "POST one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PostProduct",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/"      }    ]  },  {    "type": "post",    "url": "/product/",    "title": "POST one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PostProduct",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/"      }    ]  },  {    "type": "post",    "url": "/product/",    "title": "POST one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PostProduct",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/"      }    ]  },  {    "type": "post",    "url": "/product/",    "title": "POST one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PostProduct",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/"      }    ]  },  {    "type": "post",    "url": "/product/",    "title": "POST one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PostProduct",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/"      }    ]  },  {    "type": "put",    "url": "/product/:product_id",    "title": "PUT one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PutProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "put",    "url": "/product/:product_id",    "title": "PUT one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PutProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "put",    "url": "/product/:product_id",    "title": "PUT one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PutProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "put",    "url": "/product/:product_id",    "title": "PUT one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PutProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "put",    "url": "/product/:product_id",    "title": "PUT one product",    "group": "product",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a product in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "product_id",            "description": "<p>product_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the product</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "reference",            "description": "<p>reference of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "availability_id",            "description": "<p>availability_id(s) of the product</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "category_id",            "description": "<p>category_id(s) of the product</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "productSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "productNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a product\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a product</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "product",    "name": "PutProductProduct_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/product/:product_id"      }    ]  },  {    "type": "delete",    "url": "/storeBrand/:storeBrand_id",    "title": "DELETE one storeBrand",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a storeBrand in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeBrandSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "DeleteStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "delete",    "url": "/storeBrand/:storeBrand_id",    "title": "DELETE one storeBrand",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a storeBrand in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeBrandSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "DeleteStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "delete",    "url": "/storeBrand/:storeBrand_id",    "title": "DELETE one storeBrand",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a storeBrand in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeBrandSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "DeleteStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "get",    "url": "/storeBrand/:storeBrand_id",    "title": "GET storeBrand(s)",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all storeBrand, if you want get one storeBrand you should specify his id, otherwise the whole storeBrands are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the storeBrand</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the storeBrand</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\n  \"store_id\" : [\"\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "GetStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "get",    "url": "/storeBrand/:storeBrand_id",    "title": "GET storeBrand(s)",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all storeBrand, if you want get one storeBrand you should specify his id, otherwise the whole storeBrands are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the storeBrand</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the storeBrand</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\n  \"store_id\" : [\"\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "GetStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "get",    "url": "/storeBrand/:storeBrand_id",    "title": "GET storeBrand(s)",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all storeBrand, if you want get one storeBrand you should specify his id, otherwise the whole storeBrands are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the storeBrand</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the storeBrand</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\n  \"store_id\" : [\"\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "GetStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "head",    "url": "/storeBrand/:storeBrand_id",    "title": "HEAD of storeBrand(s)",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all storeBrand, if you want get  the header of one storeBrand you should specify his id, otherwise the header of whole storeBrands are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "HeadStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "head",    "url": "/storeBrand/:storeBrand_id",    "title": "HEAD of storeBrand(s)",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all storeBrand, if you want get  the header of one storeBrand you should specify his id, otherwise the header of whole storeBrands are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "HeadStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "head",    "url": "/storeBrand/:storeBrand_id",    "title": "HEAD of storeBrand(s)",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all storeBrand, if you want get  the header of one storeBrand you should specify his id, otherwise the header of whole storeBrands are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "HeadStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "patch",    "url": "/storeBrand/:storeBrand_id",    "title": "PATCH one storeBrand",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to storeBrand in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeBrandSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "PatchStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "patch",    "url": "/storeBrand/:storeBrand_id",    "title": "PATCH one storeBrand",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to storeBrand in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeBrandSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "PatchStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "patch",    "url": "/storeBrand/:storeBrand_id",    "title": "PATCH one storeBrand",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to storeBrand in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeBrandSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "PatchStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "post",    "url": "/storeBrand/",    "title": "POST one storeBrand",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new storeBrand in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeBrandSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "PostStorebrand",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/"      }    ]  },  {    "type": "post",    "url": "/storeBrand/",    "title": "POST one storeBrand",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new storeBrand in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeBrandSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "PostStorebrand",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/"      }    ]  },  {    "type": "post",    "url": "/storeBrand/",    "title": "POST one storeBrand",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new storeBrand in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeBrandSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "PostStorebrand",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/"      }    ]  },  {    "type": "put",    "url": "/storeBrand/:storeBrand_id",    "title": "PUT one storeBrand",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a storeBrand in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeBrandSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "PutStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "put",    "url": "/storeBrand/:storeBrand_id",    "title": "PUT one storeBrand",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a storeBrand in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeBrandSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "PutStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "put",    "url": "/storeBrand/:storeBrand_id",    "title": "PUT one storeBrand",    "group": "storeBrand",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a storeBrand in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "storeBrand_id",            "description": "<p>storeBrand_id(s) of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the storeBrand</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the storeBrand</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeBrandSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeBrandNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a storeBrand\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a storeBrand</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "storeBrand",    "name": "PutStorebrandStorebrand_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/storeBrand/:storeBrand_id"      }    ]  },  {    "type": "delete",    "url": "/store/:store_id",    "title": "DELETE one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "DeleteStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "delete",    "url": "/store/:store_id",    "title": "DELETE one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "DeleteStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "delete",    "url": "/store/:store_id",    "title": "DELETE one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "DeleteStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "delete",    "url": "/store/:store_id",    "title": "DELETE one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "DeleteStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "get",    "url": "/store/:store_id",    "title": "GET store(s)",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all store, if you want get one store you should specify his id, otherwise the whole stores are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"storeBrand_id\" : \"String\"\"name\" : \"[object Object]\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "GetStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "get",    "url": "/store/:store_id",    "title": "GET store(s)",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all store, if you want get one store you should specify his id, otherwise the whole stores are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"storeBrand_id\" : \"String\"\"name\" : \"[object Object]\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "GetStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "get",    "url": "/store/:store_id",    "title": "GET store(s)",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all store, if you want get one store you should specify his id, otherwise the whole stores are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"storeBrand_id\" : \"String\"\"name\" : \"[object Object]\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "GetStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "get",    "url": "/store/:store_id",    "title": "GET store(s)",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all store, if you want get one store you should specify his id, otherwise the whole stores are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"storeBrand_id\" : \"String\"\"name\" : \"[object Object]\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "GetStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "head",    "url": "/store/:store_id",    "title": "HEAD of store(s)",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all store, if you want get  the header of one store you should specify his id, otherwise the header of whole stores are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "HeadStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "head",    "url": "/store/:store_id",    "title": "HEAD of store(s)",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all store, if you want get  the header of one store you should specify his id, otherwise the header of whole stores are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "HeadStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "head",    "url": "/store/:store_id",    "title": "HEAD of store(s)",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all store, if you want get  the header of one store you should specify his id, otherwise the header of whole stores are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "HeadStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "head",    "url": "/store/:store_id",    "title": "HEAD of store(s)",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all store, if you want get  the header of one store you should specify his id, otherwise the header of whole stores are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "HeadStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "patch",    "url": "/store/:store_id",    "title": "PATCH one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "PatchStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "patch",    "url": "/store/:store_id",    "title": "PATCH one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "PatchStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "patch",    "url": "/store/:store_id",    "title": "PATCH one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "PatchStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "patch",    "url": "/store/:store_id",    "title": "PATCH one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "PatchStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "post",    "url": "/store/",    "title": "POST one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "PostStore",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/"      }    ]  },  {    "type": "post",    "url": "/store/",    "title": "POST one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "PostStore",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/"      }    ]  },  {    "type": "post",    "url": "/store/",    "title": "POST one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "PostStore",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/"      }    ]  },  {    "type": "post",    "url": "/store/",    "title": "POST one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "PostStore",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/"      }    ]  },  {    "type": "put",    "url": "/store/:store_id",    "title": "PUT one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "PutStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "put",    "url": "/store/:store_id",    "title": "PUT one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "PutStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "put",    "url": "/store/:store_id",    "title": "PUT one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "PutStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "put",    "url": "/store/:store_id",    "title": "PUT one store",    "group": "store",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a store in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "store_id",            "description": "<p>store_id(s) of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "storeBrand_id",            "description": "<p>storeBrand_id of the store</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the store</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "storeSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "storeNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a store\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a store</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "store",    "name": "PutStoreStore_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/store/:store_id"      }    ]  },  {    "type": "delete",    "url": "/transaction/:transaction_id",    "title": "DELETE one transaction",    "group": "transaction",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a transaction in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "transaction_id",            "description": "<p>transaction_id(s) of the transaction</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "transactionSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "transactionNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a transaction\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a transaction</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "transaction",    "name": "DeleteTransactionTransaction_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/transaction/:transaction_id"      }    ]  },  {    "type": "delete",    "url": "/transaction/:transaction_id",    "title": "DELETE one transaction",    "group": "transaction",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a transaction in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "transaction_id",            "description": "<p>transaction_id(s) of the transaction</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "transactionSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "transactionNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a transaction\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a transaction</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "transaction",    "name": "DeleteTransactionTransaction_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/transaction/:transaction_id"      }    ]  },  {    "type": "get",    "url": "/transaction/:transaction_id",    "title": "GET transaction(s)",    "group": "transaction",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all transaction, if you want get one transaction you should specify his id, otherwise the whole transactions are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id(s) of the transaction</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the transaction</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "bill_id",            "description": "<p>bill_id of the transaction</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the transaction</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"[object Object]\"\"bill_id\" : \"ObjectId\"\"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "transactionNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a transaction\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a transaction</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "transaction",    "name": "GetTransactionTransaction_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/transaction/:transaction_id"      }    ]  },  {    "type": "get",    "url": "/transaction/:transaction_id",    "title": "GET transaction(s)",    "group": "transaction",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all transaction, if you want get one transaction you should specify his id, otherwise the whole transactions are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id(s) of the transaction</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the transaction</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "bill_id",            "description": "<p>bill_id of the transaction</p> "          },          {            "group": "Success 200",            "type": "<p>ObjectId</p> ",            "optional": false,            "field": "order_id",            "description": "<p>order_id of the transaction</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"state\" : \"[object Object]\"\"bill_id\" : \"ObjectId\"\"order_id\" : \"ObjectId\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "transactionNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a transaction\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a transaction</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "transaction",    "name": "GetTransactionTransaction_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/transaction/:transaction_id"      }    ]  },  {    "type": "head",    "url": "/transaction/:transaction_id",    "title": "HEAD of transaction(s)",    "group": "transaction",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all transaction, if you want get  the header of one transaction you should specify his id, otherwise the header of whole transactions are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id(s) of the transaction</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "transactionNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a transaction\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a transaction</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "transaction",    "name": "HeadTransactionTransaction_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/transaction/:transaction_id"      }    ]  },  {    "type": "head",    "url": "/transaction/:transaction_id",    "title": "HEAD of transaction(s)",    "group": "transaction",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all transaction, if you want get  the header of one transaction you should specify his id, otherwise the header of whole transactions are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "transaction_id",            "description": "<p>transaction_id(s) of the transaction</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "transactionNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a transaction\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a transaction</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "transaction",    "name": "HeadTransactionTransaction_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/transaction/:transaction_id"      }    ]  },  {    "type": "patch",    "url": "/transaction/:transaction_id",    "title": "PATCH one transaction",    "group": "transaction",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to transaction in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "transaction_id",            "description": "<p>transaction_id(s) of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the transaction</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "transactionSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "transactionNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a transaction\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a transaction</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "transaction",    "name": "PatchTransactionTransaction_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/transaction/:transaction_id"      }    ]  },  {    "type": "patch",    "url": "/transaction/:transaction_id",    "title": "PATCH one transaction",    "group": "transaction",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to transaction in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "transaction_id",            "description": "<p>transaction_id(s) of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "state",            "description": "<p>state of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the transaction</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "transactionSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "transactionNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a transaction\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a transaction</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "transaction",    "name": "PatchTransactionTransaction_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/transaction/:transaction_id"      }    ]  },  {    "type": "post",    "url": "/transaction/",    "title": "POST one transaction",    "group": "transaction",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new transaction in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the transaction</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "transactionSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "transactionNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a transaction\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a transaction</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "transaction",    "name": "PostTransaction",    "sampleRequest": [      {        "url": "http://localhost:8080/api/transaction/"      }    ]  },  {    "type": "post",    "url": "/transaction/",    "title": "POST one transaction",    "group": "transaction",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new transaction in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the transaction</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "transactionSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "transactionNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a transaction\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a transaction</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "transaction",    "name": "PostTransaction",    "sampleRequest": [      {        "url": "http://localhost:8080/api/transaction/"      }    ]  },  {    "type": "put",    "url": "/transaction/:transaction_id",    "title": "PUT one transaction",    "group": "transaction",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a transaction in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "transaction_id",            "description": "<p>transaction_id(s) of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the transaction</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "transactionSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "transactionNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a transaction\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a transaction</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "transaction",    "name": "PutTransactionTransaction_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/transaction/:transaction_id"      }    ]  },  {    "type": "put",    "url": "/transaction/:transaction_id",    "title": "PUT one transaction",    "group": "transaction",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a transaction in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "transaction_id",            "description": "<p>transaction_id(s) of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "state",            "description": "<p>state of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "bill_id",            "description": "<p>bill_id of the transaction</p> "          },          {            "group": "Parameter",            "type": "<p>ObjectId</p> ",            "optional": true,            "field": "order_id",            "description": "<p>order_id of the transaction</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "transactionSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "transactionNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a transaction\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a transaction</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "transaction",    "name": "PutTransactionTransaction_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/transaction/:transaction_id"      }    ]  },  {    "type": "delete",    "url": "/user/:user_id",    "title": "DELETE one User",    "group": "user",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a user in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "user_id",            "description": "<p>user_id(s) of the user</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "userSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "userNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a user\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a user</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "user",    "name": "DeleteUserUser_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/user/:user_id"      }    ]  },  {    "type": "get",    "url": "/user/:user_id",    "title": "GET User(s)",    "group": "user",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all user, if you want get one user you should specify his id, otherwise the whole users are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "user_id",            "description": "<p>user_id(s) of the user</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the user</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "firstname",            "description": "<p>firstname of the user</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>email of the user</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the user</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\"firstname\" : \"[object Object]\"\"email\" : \"[object Object]\"\n  \"cart_id\" : [\"ObjectId\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "userNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a user\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a user</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "user",    "name": "GetUserUser_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/user/:user_id"      }    ]  },  {    "type": "head",    "url": "/user/:user_id",    "title": "HEAD of User(s)",    "group": "user",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all user, if you want get  the header of one user you should specify his id, otherwise the header of whole users are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "user_id",            "description": "<p>user_id(s) of the user</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "userNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a user\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a user</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "user",    "name": "HeadUserUser_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/user/:user_id"      }    ]  },  {    "type": "patch",    "url": "/user/:user_id",    "title": "PATCH one User",    "group": "user",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to user in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "user_id",            "description": "<p>user_id(s) of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "firstname",            "description": "<p>firstname of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "email",            "description": "<p>email of the user</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the user</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "userSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "userNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a user\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a user</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "user",    "name": "PatchUserUser_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/user/:user_id"      }    ]  },  {    "type": "post",    "url": "/user/",    "title": "POST one User",    "group": "user",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new user in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "firstname",            "description": "<p>firstname of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>email of the user</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the user</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "userSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "userNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a user\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a user</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "user",    "name": "PostUser",    "sampleRequest": [      {        "url": "http://localhost:8080/api/user/"      }    ]  },  {    "type": "put",    "url": "/user/:user_id",    "title": "PUT one User",    "group": "user",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a user in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "user_id",            "description": "<p>user_id(s) of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "firstname",            "description": "<p>firstname of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>email of the user</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the user</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "userSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "userNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a user\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a user</p> "          }        ]      }    },    "filename": "app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "user",    "name": "PutUserUser_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/user/:user_id"      }    ]  }]