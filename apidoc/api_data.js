define({ "api": [  {    "type": "delete",    "url": "/user/:user_id",    "title": "DELETE one User",    "group": "user",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to delete a user in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "user_id",            "description": "<p>user_id(s) of the user</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "userSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "userNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed delete a user\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed delete a user</p> "          }        ]      }    },    "filename": "src/app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "user",    "name": "DeleteUserUser_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/user/:user_id"      }    ]  },  {    "type": "get",    "url": "/user/:user_id",    "title": "GET User(s)",    "group": "user",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve one or all user, if you want get one user you should specify his id, otherwise the whole users are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "user_id",            "description": "<p>user_id(s) of the user</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the user</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "firstname",            "description": "<p>firstname of the user</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>email of the user</p> "          },          {            "group": "Success 200",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the user</p> "          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK:\n{\n\"name\" : \"[object Object]\"\"firstname\" : \"[object Object]\"\"email\" : \"[object Object]\"\n  \"cart_id\" : [\"ObjectId\"]\n  \n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "userNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed get a user\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed get a user</p> "          }        ]      }    },    "filename": "src/app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "user",    "name": "GetUserUser_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/user/:user_id"      }    ]  },  {    "type": "head",    "url": "/user/:user_id",    "title": "HEAD of User(s)",    "group": "user",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to retrieve the header of one or all user, if you want get  the header of one user you should specify his id, otherwise the header of whole users are returned</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": true,            "field": "user_id",            "description": "<p>user_id(s) of the user</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "userNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed head a user\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed head a user</p> "          }        ]      }    },    "filename": "src/app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "user",    "name": "HeadUserUser_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/user/:user_id"      }    ]  },  {    "type": "patch",    "url": "/user/:user_id",    "title": "PATCH one User",    "group": "user",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to patch a specific param to user in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "user_id",            "description": "<p>user_id(s) of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>name of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "firstname",            "description": "<p>firstname of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "email",            "description": "<p>email of the user</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the user</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "userSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "userNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed patch a user\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed patch a user</p> "          }        ]      }    },    "filename": "src/app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "user",    "name": "PatchUserUser_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/user/:user_id"      }    ]  },  {    "type": "post",    "url": "/user/",    "title": "POST one User",    "group": "user",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to add a new user in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "firstname",            "description": "<p>firstname of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>email of the user</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the user</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "userSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "userNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed post a user\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed post a user</p> "          }        ]      }    },    "filename": "src/app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "user",    "name": "PostUser",    "sampleRequest": [      {        "url": "http://localhost:8080/api/user/"      }    ]  },  {    "type": "put",    "url": "/user/:user_id",    "title": "PUT one User",    "group": "user",    "version": "0.1.0",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Method to put all property of a user in database</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Object_id</p> ",            "optional": false,            "field": "user_id",            "description": "<p>user_id(s) of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>name of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "firstname",            "description": "<p>firstname of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>email of the user</p> "          },          {            "group": "Parameter",            "type": "<p>[ObjectId]</p> ",            "optional": true,            "field": "cart_id",            "description": "<p>cart_id(s) of the user</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "userSuccess-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\" : \"request success\"\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>request success</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "userNotFound:",          "content": "HTTP/1.1 400\n{\n  \"error\" : \" Failed put a user\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "error",            "description": "<p>Failed put a user</p> "          }        ]      }    },    "filename": "src/app/apidocGenerator/temp/apiDoc.js",    "groupTitle": "user",    "name": "PutUserUser_id",    "sampleRequest": [      {        "url": "http://localhost:8080/api/user/:user_id"      }    ]  }] });